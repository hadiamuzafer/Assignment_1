
//Q32
/*32. Checking Usernames: Do the following to create a program that simulates how
websites ensure that everyone has a unique username.
• Make a list of five or more usernames called current_users.
• Make another list of five usernames called new_users. Make sure one or two of the
new usernames are also in the current_users list.
• Loop through the new_users list to see if each new username has already been used. If
it has, print a message that the person will need to enter a new username. If a username
has not been used, print a message saying that the username is available.
• Make sure your comparison is case-insensitive. If 'John' has been used, 'JOHN' should
not be accepted*/

let current_users: string[] = ["FATIMA", "MALIAKA, "AYESHA", "MEHAK", "MAHREEN"]; // List of current usernames
let new_users: string[] = ["RABIA", "HIFZA", "ZAINAB", "TAIBA", "IQRA"]; // List of new usernames

// Convert all usernames to lowercase for case-insensitive comparison
const lowercaseCurrentUsers = current_users.map(user => user.toLowerCase());

for (const newUsername of new_users) {
    const lowercaseNewUsername = newUsername.toLowerCase();
    
    if (lowercaseCurrentUsers.includes(lowercaseNewUsername)) {
        console.log(`The username '${newUsername}' is already taken. Please choose a different username.`);
    } else {
        console.log(`The username '${newUsername}' is available.`);
        lowercaseCurrentUsers.push(lowercaseNewUsername);
        current_users.push(newUsername);
    }
}
